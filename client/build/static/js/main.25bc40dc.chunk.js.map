{"version":3,"sources":["services/socketService/index.tsx","context/gameContext.ts","services/gameService/index.tsx","components/joinRoom/index.tsx","components/game/index.tsx","services/chatService/index.ts","components/chat/index.tsx","components/login/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["socket","url","Promise","rs","rj","io","on","err","console","log","defaultState","isInRoom","setInRoom","playerSymbol","setPlayerSymbol","isPlayerTurn","setPlayerTurn","isGameStarted","setGameStarted","React","createContext","roomId","emit","error","gameMatrix","matrix","listiner","message","JoinRoomContainer","styled","div","RoomIdInput","input","JoinButton","button","JoinRoom","props","useState","roomName","setRoomName","isJoining","setJoining","useContext","gameContext","joinRoom","e","a","preventDefault","socketService","trim","gameService","joinGameRoom","catch","alert","onSubmit","placeholder","value","onChange","target","type","disabled","GameContainer","RowContainer","Cell","borderTop","borderLeft","borderBottom","borderRight","PlayStopper","X","span","O","Game","setMatrix","checkGameState","i","length","row","j","push","every","column","m","v","useEffect","onGameUpdate","newMatrix","onStartGame","options","symbol","start","onGameWin","map","rowIdx","columnIdx","onClick","updateGame","currentPlayerWon","otherPlayerWon","gameWin","updateGameMatrix","Listiner","SetBottom","ChatPadding","Messages","Array","messagesArray","setMessagesArray","setInput","socketRef","ChatService","OnsendMessage","item","index","username","date","toDateString","localStorage","getItem","sendMessage","Date","Login","errormsg","changeLogOut","removeItem","setState","state","userName","Password","setItem","changeUserName","bind","changePassword","event","this","registered","axios","post","then","res","data","ReactDOM","render","document","getElementById","className","required","response","Component","AppContainer","WelcomeText","h1","MainContainer","SideContainer","Padding","Options","App","connectSocket","connect","gameContextValue","LogIn","NotLoggedIn","Welcome","Screen","SplitScreenContainer","path","exact","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.25bc40dc.chunk.js","sourcesContent":["import { io, Socket } from \"socket.io-client\";\r\nimport { DefaultEventsMap } from \"socket.io-client/build/typed-events\";\r\n\r\nclass SocketService {\r\n  public socket: Socket | null = null;\r\n\r\n  public connect(\r\n    url: string\r\n  ): Promise<Socket<DefaultEventsMap, DefaultEventsMap>> {\r\n    return new Promise((rs, rj) => {\r\n      this.socket = io(url);\r\n\r\n      if (!this.socket) return rj();\r\n\r\n      this.socket.on(\"connect\", () => {\r\n        rs(this.socket as Socket);\r\n      });\r\n\r\n      this.socket.on(\"connect_error\", (err) => {\r\n        console.log(\"Connection error: \", err);\r\n        rj(err);\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport default new SocketService();\r\n","import React from \"react\";\r\n\r\nexport interface IGameContextProps {\r\n  isInRoom: boolean;\r\n  setInRoom: (inRoom: boolean) => void;\r\n  playerSymbol: \"x\" | \"o\";\r\n  setPlayerSymbol: (symbol: \"x\" | \"o\") => void;\r\n  isPlayerTurn: boolean;\r\n  setPlayerTurn: (turn: boolean) => void;\r\n  isGameStarted: boolean;\r\n  setGameStarted: (started: boolean) => void;\r\n}\r\nconst defaultState: IGameContextProps = {\r\n  isInRoom: false,\r\n  setInRoom: () => {},\r\n  playerSymbol: \"x\",\r\n  setPlayerSymbol: () => {},\r\n  isPlayerTurn: false,\r\n  setPlayerTurn: () => {},\r\n  isGameStarted: false,\r\n  setGameStarted: () => {},\r\n};\r\n\r\nexport default React.createContext(defaultState);\r\n","import { Socket } from \"socket.io-client\";\r\nimport { IPlayMatrix, IStartGame } from \"../../components/game\";\r\n\r\nclass GameService {\r\n  public async joinGameRoom(socket: Socket, roomId: string): Promise<boolean> {\r\n    return new Promise((rs, rj) => {\r\n      socket.emit(\"join_game\", { roomId });\r\n      socket.on(\"room_joined\", () => rs(true));\r\n      socket.on(\"room_join_error\", ({ error }) => rj(error));\r\n    });\r\n  }\r\n\r\n  public async updateGame(socket: Socket, gameMatrix: IPlayMatrix) {\r\n    socket.emit(\"update_game\", { matrix: gameMatrix });\r\n  }\r\n\r\n  public async onGameUpdate(socket: Socket, listiner: (matrix: IPlayMatrix) => void) {\r\n    socket.on(\"on_game_update\", ({ matrix }) => listiner(matrix));\r\n  }\r\n\r\n  public async onStartGame(socket: Socket, listiner: (options: IStartGame) => void) {\r\n    socket.on(\"start_game\", listiner);\r\n  }\r\n\r\n  public async gameWin(socket: Socket, message: string) {\r\n    socket.emit(\"game_win\", { message });\r\n  }\r\n\r\n  public async onGameWin(socket: Socket, listiner: (message: string) => void) {\r\n    socket.on(\"on_game_win\", ({ message }) => listiner(message));\r\n  }\r\n}\r\n\r\nexport default new GameService();\r\n","import React, { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport gameContext from \"../../context/gameContext\";\r\nimport gameService from \"../../services/gameService\";\r\nimport socketService from \"../../services/socketService\";\r\n\r\ninterface IJoinRoomProps {}\r\n\r\n//Styles\r\nconst JoinRoomContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 2em;\r\n`;\r\nconst RoomIdInput = styled.input`\r\n  height: 30px;\r\n  width: 20em;\r\n  font-size: 17px;\r\n  outline: none;\r\n  border: 1px solid #8e44ad;\r\n  border-radius: 3px;\r\n  padding: 0 10px;\r\n`;\r\nconst JoinButton = styled.button`\r\n  outline: none;\r\n  background-color: #8e44ad;\r\n  color: #fff;\r\n  font-size: 17px;\r\n  border: 2px solid transparent;\r\n  border-radius: 5px;\r\n  padding: 4px 18px;\r\n  transition: all 230ms ease-in-out;\r\n  margin-top: 1em;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: transparent;\r\n    border: 2px solid #8e44ad;\r\n    color: #8e44ad;\r\n  }\r\n`;\r\n\r\nexport function JoinRoom(props: IJoinRoomProps) {\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [isJoining, setJoining] = useState(false);\r\n\r\n  const { setInRoom, isInRoom } = useContext(gameContext);\r\n\r\n  const handleRoomNameChange = (e: React.ChangeEvent<any>) => {\r\n    const value = e.target.value;\r\n    setRoomName(value);\r\n  };\r\n\r\n  const joinRoom = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const socket = socketService.socket;\r\n    if (!roomName || roomName.trim() === \"\" || !socket) return;\r\n\r\n    setJoining(true);\r\n\r\n    const joined = await gameService\r\n      .joinGameRoom(socket, roomName)\r\n      .catch((err) => {\r\n        alert(err);\r\n      });\r\n\r\n    if (joined) setInRoom(true);\r\n\r\n    setJoining(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={joinRoom}>\r\n      <JoinRoomContainer>\r\n        <h4>Enter Room ID to Join the Game</h4>\r\n        <RoomIdInput\r\n          placeholder=\"Room ID\"\r\n          value={roomName}\r\n          onChange={handleRoomNameChange}\r\n        />\r\n        <JoinButton type=\"submit\" disabled={isJoining}>\r\n          {isJoining ? \"Joining...\" : \"Join\"}\r\n        </JoinButton>\r\n      </JoinRoomContainer>\r\n    </form>\r\n  );\r\n}","import React, { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport gameContext from \"../../context/gameContext\";\r\nimport gameService from \"../../services/gameService\";\r\nimport socketService from \"../../services/socketService\";\r\n\r\ninterface ICellProps {\r\n  borderTop?: boolean;\r\n  borderRight?: boolean;\r\n  borderLeft?: boolean;\r\n  borderBottom?: boolean;\r\n}\r\n\r\n//Styles\r\nconst GameContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: \"Zen Tokyo Zoo\", cursive;\r\n  position: relative;\r\n`;\r\nconst RowContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n`;\r\nconst Cell = styled.div<ICellProps>`\r\n  width: 13em;\r\n  height: 9em;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  border-top: ${({ borderTop }) => borderTop && \"3px solid #8e44ad\"};\r\n  border-left: ${({ borderLeft }) => borderLeft && \"3px solid #8e44ad\"};\r\n  border-bottom: ${({ borderBottom }) => borderBottom && \"3px solid #8e44ad\"};\r\n  border-right: ${({ borderRight }) => borderRight && \"3px solid #8e44ad\"};\r\n  transition: all 270ms ease-in-out;\r\n\r\n  &:hover {\r\n    background-color: #8d44ad28;\r\n  }\r\n`;\r\nconst PlayStopper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 99;\r\n  cursor: default;\r\n`;\r\nconst X = styled.span`\r\n  font-size: 100px;\r\n  color: yellow;\r\n  &::after {\r\n    content: \"X\";\r\n  }\r\n`;\r\nconst O = styled.span`\r\n  font-size: 100px;\r\n  color: green;\r\n  &::after {\r\n    content: \"O\";\r\n  }\r\n`;\r\n\r\nexport type IPlayMatrix = Array<Array<string | null>>;\r\nexport interface IStartGame {\r\n  start: boolean;\r\n  symbol: \"x\" | \"o\";\r\n}\r\n\r\nexport function Game() {\r\n  const [matrix, setMatrix] = useState<IPlayMatrix>([\r\n    [null, null, null],\r\n    [null, null, null],\r\n    [null, null, null],\r\n  ]);\r\n\r\n  const {\r\n    playerSymbol,\r\n    setPlayerSymbol,\r\n    setPlayerTurn,\r\n    isPlayerTurn,\r\n    setGameStarted,\r\n    isGameStarted,\r\n  } = useContext(gameContext);\r\n\r\n  const checkGameState = (matrix: IPlayMatrix) => {\r\n    for (let i = 0; i < matrix.length; i++) {\r\n      let row = [];\r\n      for (let j = 0; j < matrix[i].length; j++) {\r\n        row.push(matrix[i][j]);\r\n      }\r\n\r\n      if (row.every((value) => value && value === playerSymbol)) {\r\n        return [true, false];\r\n      } else if (row.every((value) => value && value !== playerSymbol)) {\r\n        return [false, true];\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < matrix.length; i++) {\r\n      let column = [];\r\n      for (let j = 0; j < matrix[i].length; j++) {\r\n        column.push(matrix[j][i]);\r\n      }\r\n\r\n      if (column.every((value) => value && value === playerSymbol)) {\r\n        return [true, false];\r\n      } else if (column.every((value) => value && value !== playerSymbol)) {\r\n        return [false, true];\r\n      }\r\n    }\r\n\r\n    if (matrix[1][1]) {\r\n      if (matrix[0][0] === matrix[1][1] && matrix[2][2] === matrix[1][1]) {\r\n        if (matrix[1][1] === playerSymbol) return [true, false];\r\n        else return [false, true];\r\n      }\r\n\r\n      if (matrix[2][0] === matrix[1][1] && matrix[0][2] === matrix[1][1]) {\r\n        if (matrix[1][1] === playerSymbol) return [true, false];\r\n        else return [false, true];\r\n      }\r\n    }\r\n\r\n    //Check for a tie\r\n    if (matrix.every((m) => m.every((v) => v !== null))) {\r\n      return [true, true];\r\n    }\r\n\r\n    return [false, false];\r\n  };\r\n\r\n  const updateGameMatrix = (column: number, row: number, symbol: \"x\" | \"o\") => {\r\n    const newMatrix = [...matrix];\r\n\r\n    if (newMatrix[row][column] === null || newMatrix[row][column] === \"null\") {\r\n      newMatrix[row][column] = symbol;\r\n      setMatrix(newMatrix);\r\n    }\r\n\r\n    if (socketService.socket) {\r\n      gameService.updateGame(socketService.socket, newMatrix);\r\n      const [currentPlayerWon, otherPlayerWon] = checkGameState(newMatrix);\r\n      if (currentPlayerWon && otherPlayerWon) {\r\n        gameService.gameWin(socketService.socket, \"The Game is a TIE!\");\r\n        alert(\"The Game is a TIE!\");\r\n      } else if (currentPlayerWon && !otherPlayerWon) {\r\n        gameService.gameWin(socketService.socket, \"You Lost!\");\r\n        alert(\"You Won!\");\r\n      }\r\n\r\n      setPlayerTurn(false);\r\n    }\r\n  };\r\n\r\n  const handleGameUpdate = () => {\r\n    if (socketService.socket)\r\n      gameService.onGameUpdate(socketService.socket, (newMatrix) => {\r\n        setMatrix(newMatrix);\r\n        checkGameState(newMatrix);\r\n        setPlayerTurn(true);\r\n      });\r\n  };\r\n\r\n  const handleGameStart = () => {\r\n    if (socketService.socket)\r\n      gameService.onStartGame(socketService.socket, (options) => {\r\n        setGameStarted(true);\r\n        setPlayerSymbol(options.symbol);\r\n        if (options.start) setPlayerTurn(true);\r\n        else setPlayerTurn(false);\r\n      });\r\n  };\r\n\r\n  const handleGameWin = () => {\r\n    if (socketService.socket)\r\n      gameService.onGameWin(socketService.socket, (message) => {\r\n        console.log(\"Here\", message);\r\n        setPlayerTurn(false);\r\n        alert(message);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGameUpdate();\r\n    handleGameStart();\r\n    handleGameWin();\r\n  }, []);\r\n\r\n  return (\r\n    <GameContainer>\r\n      {!isGameStarted && (\r\n        <h2>Waiting for Other Player to Join to Start the Game!</h2>\r\n      )}\r\n      {(!isGameStarted || !isPlayerTurn) && <PlayStopper />}\r\n      {matrix.map((row, rowIdx) => {\r\n        return (\r\n          <RowContainer>\r\n            {row.map((column, columnIdx) => (\r\n              <Cell\r\n                borderRight={columnIdx < 2}\r\n                borderLeft={columnIdx > 0}\r\n                borderBottom={rowIdx < 2}\r\n                borderTop={rowIdx > 0}\r\n                onClick={() =>\r\n                  updateGameMatrix(columnIdx, rowIdx, playerSymbol)\r\n                }\r\n              >\r\n                {column && column !== \"null\" ? (\r\n                  column === \"x\" ? (\r\n                    <X />\r\n                  ) : (\r\n                    <O />\r\n                  )\r\n                ) : null}\r\n              </Cell>\r\n            ))}\r\n          </RowContainer>\r\n        );\r\n      })}\r\n    </GameContainer>\r\n  );\r\n}","import { Socket } from \"socket.io-client\";\r\n\r\ninterface IMessages{\r\n  username: string;\r\n  date: Date;\r\n  message: any;\r\n}\r\n\r\nclass ChatService {\r\n\r\n  public async joinChatRoom(socket: Socket, roomId: string): Promise<boolean> {\r\n    return new Promise((rs, rj) => {\r\n      socket.emit(\"join_chat\", { roomId });\r\n      socket.on(\"chat_joined\", () => rs(true));\r\n      socket.on(\"chat_join_error\", ({ error }) => rj(error));\r\n    });\r\n  }\r\n\r\n  public async sendMessage(socket : Socket, message: IMessages) {\r\n    socket.emit(\"send_message\", message);\r\n  }\r\n\r\n  public async OnsendMessage(socket : Socket, Listiner:(message:IMessages)=>void) {\r\n    socket.on(\"new_send_message\", Listiner);\r\n  }\r\n}\r\n\r\nexport default new ChatService();\r\nexport type {IMessages};","import socketService from \"../../services/socketService\";\r\nimport { useState,useEffect } from \"react\";\r\nimport ChatService, { IMessages } from \"../../services/chatService\";\r\nimport styled from \"styled-components\";\r\n\r\n//Styles\r\nconst RowContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n`;\r\nconst SetBottom = styled.div`\r\n    position: absolute;\r\n    bottom: 70px;\r\n`;\r\nconst ChatPadding = styled.div`\r\n    padding-top: 50px;\r\n    padding-bottom: 50px;\r\n`;\r\n\r\nconst Messages = () => {\r\n    console.log(socketService.socket)\r\n    const [messagesArray, setMessagesArray] = useState(new Array<IMessages>());\r\n    const [input, setInput] = useState(\"\");\r\n    const socketRef=socketService.socket;\r\n\r\n    useEffect(() => {\r\n        if(socketRef!=null) \r\n            ChatService.OnsendMessage(socketRef, (message) => setMessagesArray([...messagesArray, message]));;\r\n        });\r\n    \r\n      const sendMessage = () => {\r\n          let username = localStorage.getItem('registeredKey') || '';\r\n          \r\n            if(socketService.socket){\r\n                ChatService.sendMessage(socketService.socket, {message: input, username: username, date: new Date()})\r\n            }\r\n            else{\r\n                console.log(\"socket not connected\");              \r\n            }      \r\n         }\r\n\r\n    return (\r\n        <div> \r\n            <ChatPadding>\r\n                {messagesArray.map((item, index) => <div key = {index}>{item.username}: {item.message}<div>{item.date.toDateString}</div></div>)}\r\n            </ChatPadding>\r\n                \r\n            <SetBottom>\r\n                <input type=\"text\" value={input} onChange={(e)=> setInput(e.target.value)} />\r\n                <button onClick={sendMessage}>SEND</button>\r\n            </SetBottom>        \r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Messages;","import React, { Component } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport axios from 'axios'\r\nimport ReactDOM from 'react-dom'\r\nimport App from '../../App';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\n\r\nclass Login extends Component <{}, { userName: string ,Password: string ,}> {\r\n    errormsg;\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            Password: ''\r\n        }\r\n        localStorage.setItem('registeredKey', '')\r\n        this.changeUserName = this.changeUserName.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.errormsg = ''\r\n    }\r\n\r\n    changeUserName(event:any) {\r\n        this.setState({\r\n            userName: event.target.value\r\n        })\r\n    }\r\n\r\n    changePassword(event:any) {\r\n        this.setState({\r\n            Password: event.target.value\r\n        })\r\n    }\r\n\r\n    changeLogOut = () => {\r\n        localStorage.removeItem('registeredKey')\r\n        this.setState({});\r\n    }\r\n\r\n    onSubmit(event:any) {\r\n        event.preventDefault()\r\n\r\n        const registered = {\r\n            userName: this.state.userName,\r\n            Password: this.state.Password\r\n        }\r\n\r\n        axios.post('http://localhost:9000/signin', registered)//change the url to azure post signin\r\n            .then(res => this.errormsg = (res.data.message))\r\n        localStorage.setItem('registeredKey', registered.userName)\r\n        this.setState({\r\n            userName: '',\r\n            Password: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n       \r\n        if ( (localStorage.getItem('registeredKey') !== null || localStorage.getItem('registeredKey') !== '')) {\r\n            if (localStorage.getItem('registeredKey')!.length > 5) {\r\n                console.log(localStorage.getItem('registeredKey'))\r\n                ReactDOM.render(<App />, document.getElementById('root'))\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='bg-light'>\r\n\r\n                <div className='container'>\r\n                    <div className='form-div'>\r\n\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <input type='text' required placeholder='Username'\r\n                                onChange={this.changeUserName}\r\n                                value={this.state.userName}\r\n                                className='form-control form-group'\r\n                            />\r\n                            <input type='password' required placeholder='Password'\r\n                                onChange={this.changePassword}\r\n                                value={this.state.Password}\r\n                                className='form-control form-group'\r\n                            />\r\n                            <div className='d-grid gap-2 col-6 mx-auto'>\r\n                                <input type='submit' className='btn btn-success' value='Submit/Register' />\r\n                            </div>\r\n                            <div className=\"text-center text-danger h4\">{this.errormsg}</div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    catch(error:any) {\r\n        if (error.response) {\r\n            console.log(error.response.data); // => the response payload \r\n        }\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport \"./styles/App.css\";\nimport socketService from \"./services/socketService\";\nimport { JoinRoom } from \"./components/joinRoom\";\nimport GameContext, { IGameContextProps } from \"./context/gameContext\";\nimport { Game } from \"./components/game\";\nimport Messages from \"./components/chat\";\nimport ReactDOM from \"react-dom\";\nimport Login from \"./components/login\";\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\n//Styles\nconst AppContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1em;\n`;\nconst WelcomeText = styled.h1`\n  margin: 0;\n  color: #8e44ad;\n  text-align: center;\n  padding-top: 50px;\n  padding-bottom: 50px;\n`;\nconst MainContainer = styled.div`\n  margin-left: 160px;\n  padding: 0px 10px;\n`;\nconst SideContainer = styled.div`\n  height: 100%; /* Full-height: remove this if you want \"auto\" height */\n  width: 350px; /* Set the width of the sidebar */\n  position: fixed; /* Fixed Sidebar (stay in place on scroll) */\n  z-index: 1; /* Stay on top */\n  top: 0; /* Stay at the top */\n  left: 0;\n  background-color: beige;\n  overflow-x: hidden; /* Disable horizontal scroll */\n  padding-top: 20px;\n`;\nconst Padding = styled.div`\n  padding-top: 50px;\n  padding-bottom: 50px;\n`;\nconst Options = styled.div`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  text-align: center; \n`;\nconst RegularContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nfunction App() {\n  const [isInRoom, setInRoom] = useState(false);\n  const [playerSymbol, setPlayerSymbol] = useState<\"x\" | \"o\">(\"x\");\n  const [isPlayerTurn, setPlayerTurn] = useState(false);\n  const [isGameStarted, setGameStarted] = useState(false);\n\n  const connectSocket = async () => {\n    const socket = await socketService\n      .connect(\"http://localhost:9000\")\n      .catch((err: any) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  useEffect(() => {\n    connectSocket();\n  }, []);\n\n  const gameContextValue: IGameContextProps = {\n    isInRoom,\n    setInRoom,\n    playerSymbol,\n    setPlayerSymbol,\n    isPlayerTurn,\n    setPlayerTurn,\n    isGameStarted,\n    setGameStarted,\n  };\n\n  const LogIn = () => {\n    ReactDOM.render(<Login />, document.getElementById('root'))\n  }\n  const LogOut = () => {\n    localStorage.removeItem('registeredKey');\n    console.log(\"Logout attempt reached\");\n    NotLoggedIn();\n  }\n\n  const NotLoggedIn = () => {\n    ReactDOM.render(<App />, document.getElementById('root'))\n  }\n  const Welcome = () => {\n    return (<><WelcomeText>Welcome to Tic-Tac-Toe <b>Guest</b></WelcomeText><Options><button onClick={LogIn}>Sign In</button></Options></>\n    )\n  }\n  const Screen = () => {\n    if (!isInRoom) {\n      return (<JoinRoom/>)   \n    } else  {\n      return(<SplitScreenContainer/>)\n    }\n  }\n  const SplitScreenContainer = () => {\n    return(<><MainContainer><Game /></MainContainer><SideContainer><Messages /></SideContainer></>);\n  }\n\n  if (localStorage.getItem('registeredKey') === '' || localStorage.getItem('registeredKey') === null) {\n    return (\n      <Router>\n        <Switch>\n            <Route path=\"/\" exact><Welcome/></Route>\n         </Switch>\n      </Router>\n    )\n  }\n\n  return (\n    <GameContext.Provider value={gameContextValue}>\n      <AppContainer>\n\n        <WelcomeText>Welcome to Tic-Tac-Toe <b>{localStorage.getItem('registeredKey')}</b></WelcomeText>\n        <Padding>\n          <button onClick={LogOut}>Log Out</button>\n        </Padding>\n\n        <Screen/>\n\n      </AppContainer>\n    </GameContext.Provider>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router, Switch, Route, BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}